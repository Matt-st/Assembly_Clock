
E 0909 30

A150
MOV AX,0600;	CLEAR SCREEN ROUTINE
MOV BH,07;	BH CONTROLS WHAT THE COLOR IS
MOV CX,0000
MOV DX,184F;	BOTTOM OF THE SCREEN LOCATION
INT 10;		BIOS VIDEO INTTERUPT
RET

A180
MOV AH,02;	SETS CURSOR POSITION
MOV BH,00;	COLOR
MOV DX,0a20;	ROW AND COLUMN 0000
INT 10;		BIOS VIDEO INT
RET

A190
MOV DX,0200;	MOVE DX TO LOCATION WHERE THE STRING IS AT
MOV AH,09;	09 IS THE OUTPUT STRING SELECTION
INT 21;		DOS SERICES...WRITING TO THE SCREEN
RET

a200
Db"HR MIN SEC$"

A210
MOV AH,02;	SETS CURSOR POSITION
MOV BH,00;	COLOR
MOV DX,0c20;	ROW AND COLUMN
INT 10;		BIOS VIDEO INT
RET

A220
MOV AH,00;	KEYBOARD READ
INT 16
MOV [0600],AL;	HOURS TENS PLACE
MOV AH,02
MOV SI,0600
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV AH,00
INT 16
MOV [0601],AL;	HOURS ONES PLACE
MOV AH,02
MOV SI,0601
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV BL,20
MOV [0602],BL;	SPACE
MOV AH,02
MOV SI,0602
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV AH,00
INT 16
MOV [0603],AL;	MINS TENS PLACE
MOV AH,02
MOV SI,0603
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV AH,00
INT 16 
MOV [0604],AL;	MINS ONES PLACE
MOV AH,02
MOV SI,0604
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV [0605],BL;	SPACE
MOV AH,02
MOV SI,0605
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV [0606],BL;	SPACE
MOV AH,02
MOV SI,0606
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV AH,00
INT 16
MOV [0607],AL;	SECONDS TENS PLACE
MOV AH,02
MOV SI,0607
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV AH,00
INT 16
MOV [0608],AL;	SECONDS ONES PLACE
MOV AH,02
MOV SI,0608
MOV DL,[SI]
INT 21;		WRITE TO SCREEN 2A9
MOV [0609],BL;	SPACE
MOV AH,02
MOV SI,0609
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV AH,00
INT 16
MOV [060A],AL;	AM OR PM PLACE
MOV AH,02
MOV SI,060A
MOV DL,[SI]
INT 21;		WRITE TO SCREEN
MOV AH,00
INT 16
MOV [060B],AL;	50 FOR P 41 FOR M
MOV AH,02
MOV SI,060B
MOV DL,[SI]
INT 21;		WRITE TO SCReen
RET

A2E0
PUSH AX
PUSH BX
PUSH DX
MOV AH,02;	SETS CURSOR POSITION seconds
MOV BH,00;	COLOR
MOV DX,0c28;	ROW AND COLUMN 0208
INT 10;		BIOS VIDEO INT
POP DX
POP BX
POP AX
RET

A310
PUSH CX;	DELAY 1 SECOND ROUTINE
PUSH AX
MOV CX,FFFF
MOV AX,5555
DEC AX
CMP AX,0000
JNZ 318
LOOP 315
POP AX
POP CX
RET

A330
PUSH AX
PUSH CX
PUSH BX
PUSH DX
MOV AH,02
MOV CX,A;	FOR 10 SECONDS
MOV SI,0608;	MOVE WHATS AT 0608 MEMORY LOCATION TO PRINT OUT
MOV BL,[SI]
CALL 2E0;	SET CURSOR POSITION
CALL 310;	WAIT ONE SECOND
INC BL	
CMP BL,3A;	COMPARE TO 9 EVERYTHING IN HEX 
JZ 351;		IF EQUAL TO 3A JUMP 
MOV DL,BL;	ELSE MOVE DATA INTO DL AND PRINT
INT 21
LOOP 33E;	LOOP BACK TEN TIMES
MOV SI,0608;	JUMP HERE AND MOVE 30 INTO THE 0608 POSITION
MOV BL,30	
MOV [SI],BL;	SET MEM POSITIION TO ZERO EVEN IF IT WASNT BEFORE
CALL 2E0;	SET POSITION
MOV DL,30;	PRINT OUT THE ZERO
INT 21
POP DX
POP BX
POP CX
POP AX
RET

A370
PUSH AX
PUSH BX
PUSH DX
MOV AH,02;	SETS CURSOR POSITION SECONDS TENS PLACE
MOV BH,00;	COLOR
MOV DX,0C27;	ROW AND COLUMN 0207
INT 10;		BIOS VIDEO INT
POP DX
POP BX
POP AX
RET



A390
PUSH AX
PUSH BX
PUSH DX
MOV AH,02
MOV SI,0607;	TENS PLACE IN SECONDS
MOV BL,[SI]
INC BL;		INCREMENT FROM ORIGINAL ENTRY
CMP BL,36;	DONT WANT IT AT 36
JZ 3AF;		IF IT IS AT 36 JUMP
MOV DL,BL;	ELSE PRINT OUT WHAT IT IS
INT 21;		PRINT TO SCREEN
MOV [SI],BL;	SET NEW NUMBER TO MEM LOCATION SO I CAN READ IT LATER
MOV [0900],BL;	PUTTING THIS HERE SO I CAN CHECK IT LATER
POP DX
POP BX
POP AX
RET
MOV BL,30;	JUMP HERE 
MOV [SI],BL;	SET TO ZERO IT WENT OVER 60 ...CANT DO THAT
CALL 370;	RESET CURSOR
MOV DL,BL;	SET 0 IN TENS SPOT
INT 21 ;	PRINT IT
MOV BH,36
MOV [900],BH;	PUT A 36 IN MEM LOCATION SO MINUTES CAN CHECK IT
POP DX
POP BX
POP AX
RET

A3D0
PUSH AX;	MOVE MINUTES CURSOR POSITION
PUSH BX
PUSH DX
MOV AH,02;	SETS CURSOR POSITION
MOV BH,00;	COLOR
MOV DX,0C24;	ROW AND COLUMN 0204
INT 10;		BIOS VIDEO INT
POP DX
POP BX
POP AX
RET

A3F0
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AH,02
MOV SI,0900;	CHECK IF SECONDS HAVE ROLLED OVER 60
MOV BL,[SI]
CMP BL,36;	COMPAREING TO FIND OUT IF IT HAS
JZ 405;		IF IT HAS THEN JUMP
POP DX;		ELSE DO NOTHING AND EXIT
POP CX
POP BX
POP AX
RET
CALL 3D0;	JUMP HERE MOVE TO MINUTES CURSOR POS 
MOV SI,0604;	CHECK WHAT WAS INITIALLY THERE IN FIRST MINS PLACE
MOV BL,[SI]
CMP BL,39;	COMPARE SO IT DOESNT ROLL OVER TO RANDOMNESS
JZ 423;		JUMP SOMEWHERE
INC BL;		LESS THEN 39 INC IT
MOV DL,BL
INT 21;		PRINT IT OUT
MOV [SI],BL;	PUT IT IN THE MEM LOCATION
MOV [0901],BL;	SO I CAN CHECK IT LATER
POP DX
POP CX
POP BX
POP AX
RET
MOV BL,30;	JUMP HERE IF IT GOES OVER 9
MOV SI,0604;	
MOV [SI],BL
MOV DL,BL
MOV BH,3A;	IMPORTANT TO PUT 3A INTO 0901 
MOV [0901],BH;	PUT  THAT THERE TO CHECK LATER
INT 21
POP DX
POP CX
POP BX
POP AX
RET

A440
PUSH AX;	MOV MINUTES CURSOR TO TENS POSITION
PUSH BX
PUSH DX
MOV AH,02;	SETS CURSOR POSITION
MOV BH,00;	COLOR
MOV DX,0C23;	ROW AND COLUMN 0203
INT 10;		BIOS VIDEO INT
POP DX
POP BX
POP AX
RET

A460
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AH,02
MOV SI,0901;	CHECK IF THE MINUTES HAS ROLLED OVER 9
MOV BL,[SI]
CMP BL,3A;	COMPARE WE NEED TO SEE IF IT IS PAST 9
JZ 475;		JUMP IF IT IS
POP DX;		ELSE EXIT ROUTINE
POP CX
POP BX
POP AX
RET
CALL 440;	PUT ME AT MINS TEN SPOT
MOV BH,30;	PUSH 30 INTO MEM FOR TENS MINUTES POS TO KEEP TRACK
MOV [0901],BH;	PUT IT HERE TO CHECK LATER
MOV SI,0603;	GRAB THE TIME USER ENTERED....THE SINGLES MIN POS
MOV BL,[SI];	MOVE INTO BL
INC BL;		INCREMENT CAUSE THEY ALREADY SEE IT
CMP BL,36;	COMPARE WE CANT GO OVER 60 STUFF STOPS AT 59
JZ 49B;		JUMP TO LOCATION IF IT IS EQUAL 6
MOV DL,BL;	ELSE PRINT THAT STUFF
INT 21
MOV [0603],BL;	UPDATE MEMORY TO NEW NUMBER
MOV [0902],BL;	UPDATE PLACE WHERE HOURS WILL CHECK
POP DX
POP CX
POP BX
POP AX
RET
CALL 440;	SET CURSOR FOR MINS TENS SPOT
MOV BH,36;	MOVE 6 INTO BH
MOV [0902],BH;	WE WANNA STORE IT FOR THE HOURS POSITION TO CHECK
MOV BL,30;	WE WANNA PRINT A ZERO	
MOV [0603],BL;	AND MOVE 30 INTO MEMORY SPOT WHERE TIME IS HELD
MOV DL,BL; 	PRINT THAT ZERO
INT 21
POP DX
POP CX
POP BX
POP AX
RET


A4C0
PUSH AX;	MOV MINUTES CURSOR TO TENS POSITION
PUSH BX
PUSH DX
MOV AH,02;	SETS CURSOR POSITION
MOV BH,00;	COLOR
MOV DX,0C21;	ROW AND COLUMN 0201
INT 10;		BIOS VIDEO INT
POP DX
POP BX
POP AX
RET


A4E0
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AH,02
MOV SI,0902;	CHECK IF THE MINUTES HAS ROLLED OVER 60 TO AN HOUR
MOV BL,[SI]
CMP BL,36;	COMPARE WE DONT WANT IT TO BE 36 OR 6
JZ 4F5;		JUMP IF IT IS
POP DX
POP CX
POP BX
POP AX
RET
MOV BL,30
MOV [0902],BL
CALL 4C0;	PUT ME AT SINGLES HOUR SPOT 4F5
MOV BL,[0600];	DOING THIS TO CHECK IF
CMP BL,31;	THERE IS A ONE IN THE TENS SPOT
JZ 54C;		IF SO THEN JUMP SO WE CAN CHANGE THINGS ACCORDINGLY 
MOV BL,30;	PUSH 30 INTO MEM FOR TENS MINUTES POS TO KEEP TRACK OF
MOV [0902],BL
MOV SI,0601;	GRAB THE TIME USER ENTERED....THE SINGLES HOURS POS
MOV BL,[SI];	MOVE INTO BL
INC BL;		INCREMENT CAUSE THEY ALREADY SEE IT
CMP BL,3A;	COMPARE WE CANT GO OVER 9
JZ 52A;		JUMP TO LOCATION IF IT IS EQUAL 3A
MOV DL,BL;	ELSE PRINT THAT STUFF JUMP BACK HERE
INT 21
MOV [0601],BL;	UPDATE MEMORY TO NEW NUMBER
MOV [0903],BL;	UPDATE PLACE WHERE HOURS WILL CHECK
POP DX
POP CX
POP BX
POP AX
RET
CALL 4C0;	JUMP HERE CURSOR FOR HOURS ONES PLACE 52A
MOV BL,3A;	MOVE 3A INTO BH
MOV [0903],BL;	WE WANNA STORE IT FOR THE HOURS POSITION TO CHECK
MOV BL,30;	WE WANNA PRINT A ZERO	
MOV [0601],BL;	AND MOVE 30 INTO MEMORY SPOT WHERE TIME IS HELD
MOV BH, [0909];	HAVE TO CHECK WHATS IN THIS LOCATION
INC BH;		INCREMENT SO THE PROGRAM KNOWS THAT WE ARE AT 1
MOV [0909],BH;	FOR THE HOURS POSITION AND CAN'T GO TO 2 ONLY 0
MOV DL,BL; 	PRINT THAT ZERO
INT 21
POP DX
POP CX
POP BX
POP AX
RET
CALL 4C0;	WHAT POSITION IS THIS 54C
MOV BL,[0601];	SCENARIO FOR 10 11 12
INC BL;		INCREMENT HOPEFULLY TO 1 BUT IF ITS TO 2 WE WILL JUMP
CMP BL,32;	NEED TO CHECK TO MAKES SURE NOT GREATER THAN ONE
JG 567; 	MOVE IT TO 1
MOV DL,BL;	IF WE DONT JUMP YOU PRINT THE ONE
INT 21
MOV [0601],BL
POP DX
POP CX
POP BX
POP AX
RET
CALL 4C0;	JUMP HERE IF GREATER THEN 12
MOV BL,31;	put 31 into bl 
MOV DL,BL;	print out 1
INT 21;		print it
MOV [0601],BL;	put this data in the memory location 
MOV BL,30;	mov 0 into bl 
CALL 680;call 680
MOV [0600],BL
MOV DL,BL
INT 21
MOV BL,[060A] ;	NEED TO CHANGE AM TO PM OR VICE VERSA
CMP BL,50;	CHECK IF IT IS P=50
JZ 58F
CALL 0950 ;	ELSE CHANGE A T0 P AND PRINT IT
JMP 592;	TO POP POSITION
CALL 0990;58F	CHANGE P TO A AND PRINT IT
POP DX;		592 START POPING STUFF
POP CX
POP BX
POP AX
RET
			
A5A0
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AH,02
MOV SI,0903;	CHECK IF THE HOURS HAS ROLLED OVER 9
MOV BL,[SI]
CMP BL,3A;	CHECKING STUFF HAHA COMPARE WE DONT WANT IT TO BE 40
JZ 5B5;		JUMP IF IT IS...TO SOMEWHERE
POP DX
POP CX
POP BX
POP AX
RET
CALL 680;	5B5 PUT ME AT HOURS TEN SPOT
MOV BH,30;	PUSH 30 BACK INTO MEM LOCATION FOR TENS POS TO KEEP TRAcK OF
MOV [0903],BH
MOV SI,0600;	GRAB THE TIME USER ENTERED THE TENS HOUR POS
MOV BL,[SI];	MOV INTO BL
INC BL;		INCREMENT CAUSE THEY ALREADY SEE IT
CMP BL,32;	COMPARE WE CANT GO OVER 1 STUFF STOPS AT 1
JZ 5DB;		JUMP TO LOCATION IF IT IS EQUAL 2
MOV DL,BL;	ELSE PRINT THAT STUFF
INT 21
MOV [0600],BL;	UPDATE MEMORY TO NEW NUMBER
MOV [0904],BL;	UPDATE PLACE WHERE HOURS WILL CHECK
POP DX
POP CX
POP BX
POP AX
RET
CALL 680;	5DB SeT CURSOR FOR HOURS TENS SPOT 5A8
MOV BH,31;	MOVE 1 INTO BH
MOV [0904],BH;	WE WANNA STORE IT FOR THE HOURS POSITION TO CHEC
MOV BL,30;	WE WANNA PRINT A ZERO THOUGH SO PRITN 30	
MOV [0600],BL;	AND MOVE 30 INTO MEMORY SPOT WHERE TIME IS HELD
MOV DL,BL; 	PRINT THAT ZERO
INT 21
POP DX
POP CX
POP BX
POP AX
RET

A680
PUSH AX;	MOVE HOURS CURSOR TO TENS POSITION
PUSH BX
PUSH DX
MOV AH,02;	SETS CURSOR POSITION
MOV BH,00;	COLOR
MOV DX,0C20;	ROW AND COLUMN 0200
INT 10;		BIOS VIDEO INT
POP DX
POP BX
POP AX
RET

A1000
Db"THIS IS A CLOCK THAT WILL RUN CONTINOUSLY ONCE THE USER HAS"
Db" ENTERED THE TIME.   THIS CLOCK WORKS IN THE STANDARD FASHION OF"
Db" A NORMAL 12 HOUR CLOCK ONCE THE CLOCK HITS 12 59 59 SECONDS IT"
Db" WILL ROLL OVER TO 1 00 00. THE USER SHOULD ENTER THE HOUR FIRST"
Db"AND THEN ENTER THE MINUTES AND FINALLY THE SECONDS.  THERE IS NO"
Db"  NEED TO FORMAT THE PROGRAM WILL ADJUST THE MINUTES AND SECONDS"
Db" AUTOMATICALLY.  THIS WILL ALSO REQUIRE THE USER TO"
Db" ENTER THE ANTI-MERIDIEM OR POST MERIDIEM.  ENJOY!$"
 
A8B0
MOV AH,02;	SETS CURSOR POSITION
MOV BH,00;	COLOR
MOV DX,0000;	ROW AND COLUMN 0000
INT 10;		BIOS VIDEO INT
RET

A8C0
MOV DX,1000;	MOVE DX TO LOCATION WHERE THE STRING IS AT
MOV AH,09;	09 IS THE OUTPUT STRING SELECTION
INT 21;		DOS SERICES...WRITING TO THE SCREEN
RET

A950
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV BL,50;	CHANGE A TO P AND PRINT IT
MOV [0C2A],BL
CALL 9C0
MOV DL,BL
INT 21
POP DX
POP CX
POP BX
POP AX
RET

A990
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV BL,41;	CHANGE P TO A AND PRINT IT
MOV [0C2A],BL
CALL 9C0
MOV DL,BL
INT 21
POP DX
POP CX
POP BX
POP AX
RET

A9C0
MOV AH,02;	SETS CURSOR POSITION
MOV BH,00;	COLOR
MOV DX,0c2A;	ROW AND COLUMN
INT 10;		BIOS VIDEO INT
RET


A100
CALL 150;	CLEAR SCREEN
CALL 8B0
CALL 8C0
CALL 180;	SET CURSOR POSITION
CALL 190;	WRITE THE STRING AT LOCATION 0200
CALL 210; 	MOVE CURSOR POSITION
CALL 220;	KEYBOARD READ ROUTINE
MOV CX,FFFF
CALL 330;	SECONDS COUNTER LOOP HERE
CALL 370;	MOVE CURSOR TO TENS SECOND POS
CALL 390;	NOW TO CHANGE THE TENS SECOND POSITION
CALL 3F0;	INC MINS FIRST POS
CALL 460;	CHANGE TENS POSITION IN MINS
CALL 4E0;	CHANGE HOURS FIRST POSITION
CALL 5A0;	CHANGE HOURS SECOND SPOT
LOOP 118
INT 3

G=100
